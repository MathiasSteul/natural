* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
DEFINE DATA
GLOBAL USING ANAMOD0G
PARAMETER USING ANAMOD0A
LOCAL USING USR-MSG   /* Data for message exchange
LOCAL USING USR-FLD   /* Description of the field in error
LOCAL
1 AMOUNT (I4) CONST <255> /* number of returning lines with one callnat
1 USR1057L
  2 OBJECT-KEY
    3 LIBRARY        (A08)
    3 OBJECT-NAME    (A32)
    3 OBJECT-TYPE    (A02)
    3 OPT-ACCESS     (A01)
    3 OPT-UNUSED-1   (L)
    3 OPT-UNUSED-2   (A01)
    3 OPT-LINE-NUM   (A01)
    3 OPT-UNUSED-3   (L)
    3 OPT-REDEF-DIR  (L)
    3 OPT-UNUSED-4   (A01)
    3 OPT-AMOUNT     (I02)
    3 OPT-LINESIZE   (I02)
/*
  2 INPUT-OUTPUTS
    3 INT-HANDLE     (I04)
    3 NEXT-SEQ       (I04)
    3 NEXT-NUM       (I02)
/*
  2 OUTPUTS
    3 RETURNED       (I02)
    3 SRC-NUM        (I02/1:AMOUNT)
    3 SRC-TEXT       (A01/1:AMOUNT,1:93)
    3 REDEFINE SRC-TEXT
      4 SRC-GROUP    (1:AMOUNT)
        5 SRC-LINE   (A93)
        5 REDEFINE SRC-LINE
          6 SRC-LINE-ARRAY (A1/1:93)
    3 REDEFINE SRC-TEXT
      4 DIR-OBJNAME      (A32)    /* Object Name
      4 DIR-LIBRARY      (A08)    /* Library ID
      4 DIR-OBJTYPE      (A02)    /* Object Type
      4 DIR-OBJKIND      (A01)    /* Source or Module
      4 DIR-DBID         (A05)    /* DBID of System File
      4 DIR-FNR          (A05)    /* FNR of System File
      4 DIR-DATN         (A08)    /* Date in Format (YYYYMMDD)
      4 DIR-TIMN         (A07)    /* Time in Format (HHIISST)
      4 DIR-USERID       (A08)    /* User ID
      4 DIR-PROGMODE     (A01)    /* Programming Mode
      4 DIR-SRCSIZE      (A10)    /* Source Area Size
      4 DIR-GPSIZE       (A10)    /* Size of Module
      4 DIR-UNIQUE-ID    (A32)    /* Unique ID
      4 DIR-DDM-DBID     (A05)    /* DBID the DDM is cataloged with
      4 DIR-DDM-FNR      (A05)    /* FNR the DDM is cataloged with
      4 DIR-NATVERS      (A04)    /* NATURAL Version
      4 DIR-NATSM        (A02)    /* NATURAL SM Level
      4 DIR-INIT-USER    (A08)    /* Init User ID
      4 DIR-TID          (A08)    /* Terminal ID
      4 DIR-TRANS-NAME   (A08)    /* TP Transcation Name
      4 DIR-OPSYS        (A08)    /* Operating System
      4 DIR-TPSYS        (A08)    /* TP System
      4 DIR-USED-GDA     (A08)    /* Used GDA
/* End of directory attributes
    3 SRC-SEQ        (I04/1:AMOUNT)
    3 SRC-LONG       (A01/1:AMOUNT)
/*
1 USR1057N
  2 VERSION          (I01)     INIT <2>
  2 V1-NSC-CKECK     (A01)
  2 V2-DBID          (N05)
  2 V2-FNR           (N04)
  2 V2-PSW           (A08)
  2 V2-CIP           (N08) 
  2 V2-SYSFILE       (A01)
1 REDEFINE USR1057N
  2 EXTENDED-PARMS
    3 EXTENDED-DATA  (A01/1:28)
1 USR2011L
  2 INPUTS
    3 FUNCTION (A1) INIT <'S'>
    3 WORK-NUM (I1) INIT <5>
  2 INPUT-OUTPUTS
    3 WORK-FILE (A253)
    3 WORK-TYPE (A1) INIT <'D'>
  2 OUTPUTS
    3 MAX-NUM (I1)
    3 RESPONSE (I4)
1 #I3 (I4)
1 #I4 (I4)
1 #I5 (I4)
1 WORKBUF (A100)
END-DEFINE
/*
/* Move Counter from PDA to GDA
MOVE BY NAME ANAMOD0 TO COUNTS
MOVE BY NAME ANAMOD0 TO PROFILE
/*
RESET USR1057L
*
USR1057L.OPT-LINE-NUM  := 'Y'
USR1057L.OPT-REDEF-DIR := TRUE
USR1057L.OPT-AMOUNT    := AMOUNT
USR1057L.OPT-LINESIZE  := 93
USR1057L.LIBRARY       := #LIBRARY
USR1057L.OBJECT-NAME   := #OBJECT
USR1057L.OBJECT-TYPE   := #TYPE
RESET #LINES
/*
USR1057L.OPT-ACCESS   := 'O' /* Open Source
CALLNAT 'USR1057N' USR1057L  USR1057N.EXTENDED-PARMS
  NAD-MSG   NAD-FLD
/*
IF NAD-MSG.MSG-NR NE 0
  WRITE WORK 31 VARIABLE LIBRARY OBJECT-NAME RETURNED NAD-MSG.MSG-NR NAD-MSG.MSG 'Open Source failed'
  ESCAPE ROUTINE
END-IF
/*
RESET MODUL(*) MAXLINES VARIABLES(*) VARCOUNT REDEF REDEF
OBJNAME := DIR-OBJNAME
OBJTYPE := DIR-OBJTYPE
OBJPROGMODE := DIR-PROGMODE
OBJSIZE := VAL(DIR-SRCSIZE)
OBJLIBRARY := DIR-LIBRARY
/*
USR1057L.OPT-ACCESS := 'R' /* Read Source
/*
REPEAT
*
  CALLNAT 'USR1057N' USR1057L  USR1057N.EXTENDED-PARMS
    NAD-MSG   NAD-FLD
/*
  IF NAD-MSG.MSG-NR NE 0 AND NAD-MSG.MSG-NR NE 100 /* End of data
    WRITE WORK 31 VARIABLE OBJNAME OBJTYPE OBJSIZE RETURNED NAD-MSG.MSG-NR NAD-MSG.MSG
*  escape routine
  END-IF

  FOR #I3 = 1 TO USR1057L.RETURNED
/* loop thru source lines
    PERFORM DELETE-REMARKS
    IF SRC-LINE(#I3) <> ' '
/* Lines has no Remarks
      ADD 1 TO #LINES
      MAXLINES := #LINES
      LINENO(MAXLINES) := SRC-NUM(#I3)
      TEXT(MAXLINES) := SRC-LINE(#I3)
      EXAMINE TEXT(MAXLINES) TRANSLATE INTO UPPER
    END-IF
  END-FOR
/*
  IF NAD-MSG.MSG-NR = 100 /* end of data
    ESCAPE BOTTOM
  END-IF
*
END-REPEAT
/*
/* Process Natural Modul
PERFORM ANAMOD0S
/* Put Counter from GDA to PDA
MOVE BY NAME COUNTS TO ANAMOD0
/*
DEFINE SUBROUTINE DELETE-REMARKS
/* delete all remarks from source-line
/* delete whole source-line if it contains remarks only
/*
IF SRC-LINE-ARRAY(#I3,1) = '*'
  RESET SRC-LINE(#I3)
  ESCAPE ROUTINE
END-IF
EXAMINE SRC-LINE(#I3) FOR '/*' GIVING POSITION #I4
IF #I4 <> 0
  RESET SRC-LINE-ARRAY(#I3,#I4:93)
END-IF
FOR #I5 = 1 TO 93
  IF SRC-LINE-ARRAY(#I3,#I5) <> ' '
    ESCAPE BOTTOM
  END-IF
  SRC-LINE-ARRAY(#I3,#I5) := H'FF'
END-FOR
EXAMINE  SRC-LINE(#I3) FOR H'FF' DELETE
END-SUBROUTINE
/*
END
